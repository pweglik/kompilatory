Grammar:

Rule 0     S' -> Program
Rule 1     Program -> StatementList
Rule 2     empty -> <empty>
Rule 3     StatementList -> empty
Rule 4     StatementList -> StatementList Statement
Rule 5     Statement -> ExpressionStatement ;
Rule 6     Statement -> AssignmentStatement ;
Rule 7     Statement -> PrintStatement ;
Rule 8     Statement -> JumpStatement ;
Rule 9     Statement -> IterationStatement
Rule 10    Statement -> SelectionStatement
Rule 11    Statement -> CompoundStatement
Rule 12    CompoundStatement -> { StatementList }
Rule 13    ExpressionStatement -> Expression
Rule 14    SelectionStatement -> IF ( Expression ) Statement ELSE Statement
Rule 15    SelectionStatement -> IF ( Expression ) Statement
Rule 16    IterationStatement -> FOR ID ASS List Statement
Rule 17    IterationStatement -> FOR ID ASS Range Statement
Rule 18    IterationStatement -> WHILE ( Expression ) Statement
Rule 19    JumpStatement -> RETURN Expression
Rule 20    JumpStatement -> CONTINUE
Rule 21    JumpStatement -> BREAK
Rule 22    PrintStatement -> PRINT Expression
Rule 23    Expression -> ID
Rule 24    Expression -> Primitive
Rule 25    Expression -> Matrix
Rule 26    Expression -> Expression BinaryOperator Expression
Rule 27    Expression -> Expression ComparisonOperator Expression
Rule 28    MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ]
Rule 29    MatrixAccess -> empty
Rule 30    MatrixAccessRange -> MatrixAccessRangeElement
Rule 31    MatrixAccessRange -> MatrixAccessRangeElement : MatrixAccessRangeElement
Rule 32    MatrixAccessRangeElement -> ID
Rule 33    MatrixAccessRangeElement -> INT
Rule 34    Range -> RangeElement : RangeElement : RangeElement
Rule 35    Range -> RangeElement : RangeElement
Rule 36    RangeElement -> ID
Rule 37    RangeElement -> Number
Rule 38    List -> [ ListContent ]
Rule 39    ListContent -> empty
Rule 40    ListContent -> ListEl , ListContent
Rule 41    ListEl -> List
Rule 42    ListEl -> Primitive
Rule 43    ListEl -> ID
Rule 44    Primitive -> STRING
Rule 45    Primitive -> Number
Rule 46    Matrix -> [ MatrixRowList ]
Rule 47    Matrix -> EYE ( INT )
Rule 48    Matrix -> ONES ( INT )
Rule 49    Matrix -> ZEROS ( INT )
Rule 50    MatrixRowList -> empty
Rule 51    MatrixRowList -> [ MatrixRow ] , MatrixRowList
Rule 52    MatrixRow -> empty
Rule 53    MatrixRow -> Number , MatrixRow
Rule 54    BinaryOperator -> DIV_EL
Rule 55    BinaryOperator -> MUL_EL
Rule 56    BinaryOperator -> SUB_EL
Rule 57    BinaryOperator -> ADD_EL
Rule 58    BinaryOperator -> DIV
Rule 59    BinaryOperator -> MUL
Rule 60    BinaryOperator -> SUB
Rule 61    BinaryOperator -> ADD
Rule 62    AssignmentStatement -> ID MatrixAccess AssignmentOperator Expression
Rule 63    AssignmentStatement -> ID AssignmentOperator Expression
Rule 64    AssignmentOperator -> ASS_MUL
Rule 65    AssignmentOperator -> ASS_DIV
Rule 66    AssignmentOperator -> ASS_SUB
Rule 67    AssignmentOperator -> ASS_ADD
Rule 68    AssignmentOperator -> ASS
Rule 69    PrefixUnaryOperator -> empty
Rule 70    PrefixUnaryOperator -> SUB
Rule 71    PostfixUnaryOperator -> empty
Rule 72    PostfixUnaryOperator -> MAT_TRANS
Rule 73    Number -> FLOAT
Rule 74    Number -> INT
Rule 75    ComparisonOperator -> LESS
Rule 76    ComparisonOperator -> GREATER
Rule 77    ComparisonOperator -> NOT_EQ
Rule 78    ComparisonOperator -> GREATER_EQ
Rule 79    ComparisonOperator -> LESS_EQ
Rule 80    ComparisonOperator -> EQ

Terminals, with rules where they appear:

(                    : 14 15 18 47 48 49
)                    : 14 15 18 47 48 49
,                    : 28 40 51 53
:                    : 31 34 34 35
;                    : 5 6 7 8
ADD                  : 61
ADD_EL               : 57
ASS                  : 16 17 68
ASS_ADD              : 67
ASS_DIV              : 65
ASS_MUL              : 64
ASS_SUB              : 66
BREAK                : 21
CONTINUE             : 20
DIV                  : 58
DIV_EL               : 54
ELSE                 : 14
EQ                   : 80
EYE                  : 47
FLOAT                : 73
FOR                  : 16 17
GREATER              : 76
GREATER_EQ           : 78
ID                   : 16 17 23 32 36 43 62 63
IF                   : 14 15
INT                  : 33 47 48 49 74
LESS                 : 75
LESS_EQ              : 79
MAT_TRANS            : 72
MUL                  : 59
MUL_EL               : 55
NOT_EQ               : 77
ONES                 : 48
PRINT                : 22
RETURN               : 19
STRING               : 44
SUB                  : 60 70
SUB_EL               : 56
WHILE                : 18
ZEROS                : 49
[                    : 28 38 46 51
]                    : 28 38 46 51
error                : 
{                    : 12
}                    : 12

Nonterminals, with rules where they appear:

AssignmentOperator   : 62 63
AssignmentStatement  : 6
BinaryOperator       : 26
ComparisonOperator   : 27
CompoundStatement    : 11
Expression           : 13 14 15 18 19 22 26 26 27 27 62 63
ExpressionStatement  : 5
IterationStatement   : 9
JumpStatement        : 8
List                 : 16 41
ListContent          : 38 40
ListEl               : 40
Matrix               : 25
MatrixAccess         : 62
MatrixAccessRange    : 28 28
MatrixAccessRangeElement : 30 31 31
MatrixRow            : 51 53
MatrixRowList        : 46 51
Number               : 37 45 53
PostfixUnaryOperator : 
PrefixUnaryOperator  : 
Primitive            : 24 42
PrintStatement       : 7
Program              : 0
Range                : 17
RangeElement         : 34 34 34 35 35
SelectionStatement   : 10
Statement            : 4 14 14 15 16 17 18
StatementList        : 1 4 12
empty                : 3 29 39 50 52 69 71


state 0

    (0) S' -> . Program
    (1) Program -> . StatementList
    (3) StatementList -> . empty
    (4) StatementList -> . StatementList Statement
    (2) empty -> .
    ID              reduce using rule 2 (empty -> .)
    PRINT           reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    CONTINUE        reduce using rule 2 (empty -> .)
    BREAK           reduce using rule 2 (empty -> .)
    FOR             reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    {               reduce using rule 2 (empty -> .)
    STRING          reduce using rule 2 (empty -> .)
    [               reduce using rule 2 (empty -> .)
    EYE             reduce using rule 2 (empty -> .)
    ONES            reduce using rule 2 (empty -> .)
    ZEROS           reduce using rule 2 (empty -> .)
    FLOAT           reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)
    $end            reduce using rule 2 (empty -> .)

    Program                        shift and go to state 1
    StatementList                  shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> Program .


state 2

    (1) Program -> StatementList .
    (4) StatementList -> StatementList . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    $end            reduce using rule 1 (Program -> StatementList .)
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Statement                      shift and go to state 4
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Expression                     shift and go to state 12
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 3

    (3) StatementList -> empty .
    ID              reduce using rule 3 (StatementList -> empty .)
    PRINT           reduce using rule 3 (StatementList -> empty .)
    RETURN          reduce using rule 3 (StatementList -> empty .)
    CONTINUE        reduce using rule 3 (StatementList -> empty .)
    BREAK           reduce using rule 3 (StatementList -> empty .)
    FOR             reduce using rule 3 (StatementList -> empty .)
    WHILE           reduce using rule 3 (StatementList -> empty .)
    IF              reduce using rule 3 (StatementList -> empty .)
    {               reduce using rule 3 (StatementList -> empty .)
    STRING          reduce using rule 3 (StatementList -> empty .)
    [               reduce using rule 3 (StatementList -> empty .)
    EYE             reduce using rule 3 (StatementList -> empty .)
    ONES            reduce using rule 3 (StatementList -> empty .)
    ZEROS           reduce using rule 3 (StatementList -> empty .)
    FLOAT           reduce using rule 3 (StatementList -> empty .)
    INT             reduce using rule 3 (StatementList -> empty .)
    $end            reduce using rule 3 (StatementList -> empty .)
    }               reduce using rule 3 (StatementList -> empty .)


state 4

    (4) StatementList -> StatementList Statement .
    ID              reduce using rule 4 (StatementList -> StatementList Statement .)
    PRINT           reduce using rule 4 (StatementList -> StatementList Statement .)
    RETURN          reduce using rule 4 (StatementList -> StatementList Statement .)
    CONTINUE        reduce using rule 4 (StatementList -> StatementList Statement .)
    BREAK           reduce using rule 4 (StatementList -> StatementList Statement .)
    FOR             reduce using rule 4 (StatementList -> StatementList Statement .)
    WHILE           reduce using rule 4 (StatementList -> StatementList Statement .)
    IF              reduce using rule 4 (StatementList -> StatementList Statement .)
    {               reduce using rule 4 (StatementList -> StatementList Statement .)
    STRING          reduce using rule 4 (StatementList -> StatementList Statement .)
    [               reduce using rule 4 (StatementList -> StatementList Statement .)
    EYE             reduce using rule 4 (StatementList -> StatementList Statement .)
    ONES            reduce using rule 4 (StatementList -> StatementList Statement .)
    ZEROS           reduce using rule 4 (StatementList -> StatementList Statement .)
    FLOAT           reduce using rule 4 (StatementList -> StatementList Statement .)
    INT             reduce using rule 4 (StatementList -> StatementList Statement .)
    $end            reduce using rule 4 (StatementList -> StatementList Statement .)
    }               reduce using rule 4 (StatementList -> StatementList Statement .)


state 5

    (5) Statement -> ExpressionStatement . ;
    ;               shift and go to state 32


state 6

    (6) Statement -> AssignmentStatement . ;
    ;               shift and go to state 33


state 7

    (7) Statement -> PrintStatement . ;
    ;               shift and go to state 34


state 8

    (8) Statement -> JumpStatement . ;
    ;               shift and go to state 35


state 9

    (9) Statement -> IterationStatement .
    ID              reduce using rule 9 (Statement -> IterationStatement .)
    PRINT           reduce using rule 9 (Statement -> IterationStatement .)
    RETURN          reduce using rule 9 (Statement -> IterationStatement .)
    CONTINUE        reduce using rule 9 (Statement -> IterationStatement .)
    BREAK           reduce using rule 9 (Statement -> IterationStatement .)
    FOR             reduce using rule 9 (Statement -> IterationStatement .)
    WHILE           reduce using rule 9 (Statement -> IterationStatement .)
    IF              reduce using rule 9 (Statement -> IterationStatement .)
    {               reduce using rule 9 (Statement -> IterationStatement .)
    STRING          reduce using rule 9 (Statement -> IterationStatement .)
    [               reduce using rule 9 (Statement -> IterationStatement .)
    EYE             reduce using rule 9 (Statement -> IterationStatement .)
    ONES            reduce using rule 9 (Statement -> IterationStatement .)
    ZEROS           reduce using rule 9 (Statement -> IterationStatement .)
    FLOAT           reduce using rule 9 (Statement -> IterationStatement .)
    INT             reduce using rule 9 (Statement -> IterationStatement .)
    $end            reduce using rule 9 (Statement -> IterationStatement .)
    }               reduce using rule 9 (Statement -> IterationStatement .)
    ELSE            reduce using rule 9 (Statement -> IterationStatement .)


state 10

    (10) Statement -> SelectionStatement .
    ID              reduce using rule 10 (Statement -> SelectionStatement .)
    PRINT           reduce using rule 10 (Statement -> SelectionStatement .)
    RETURN          reduce using rule 10 (Statement -> SelectionStatement .)
    CONTINUE        reduce using rule 10 (Statement -> SelectionStatement .)
    BREAK           reduce using rule 10 (Statement -> SelectionStatement .)
    FOR             reduce using rule 10 (Statement -> SelectionStatement .)
    WHILE           reduce using rule 10 (Statement -> SelectionStatement .)
    IF              reduce using rule 10 (Statement -> SelectionStatement .)
    {               reduce using rule 10 (Statement -> SelectionStatement .)
    STRING          reduce using rule 10 (Statement -> SelectionStatement .)
    [               reduce using rule 10 (Statement -> SelectionStatement .)
    EYE             reduce using rule 10 (Statement -> SelectionStatement .)
    ONES            reduce using rule 10 (Statement -> SelectionStatement .)
    ZEROS           reduce using rule 10 (Statement -> SelectionStatement .)
    FLOAT           reduce using rule 10 (Statement -> SelectionStatement .)
    INT             reduce using rule 10 (Statement -> SelectionStatement .)
    $end            reduce using rule 10 (Statement -> SelectionStatement .)
    }               reduce using rule 10 (Statement -> SelectionStatement .)
    ELSE            reduce using rule 10 (Statement -> SelectionStatement .)


state 11

    (11) Statement -> CompoundStatement .
    ID              reduce using rule 11 (Statement -> CompoundStatement .)
    PRINT           reduce using rule 11 (Statement -> CompoundStatement .)
    RETURN          reduce using rule 11 (Statement -> CompoundStatement .)
    CONTINUE        reduce using rule 11 (Statement -> CompoundStatement .)
    BREAK           reduce using rule 11 (Statement -> CompoundStatement .)
    FOR             reduce using rule 11 (Statement -> CompoundStatement .)
    WHILE           reduce using rule 11 (Statement -> CompoundStatement .)
    IF              reduce using rule 11 (Statement -> CompoundStatement .)
    {               reduce using rule 11 (Statement -> CompoundStatement .)
    STRING          reduce using rule 11 (Statement -> CompoundStatement .)
    [               reduce using rule 11 (Statement -> CompoundStatement .)
    EYE             reduce using rule 11 (Statement -> CompoundStatement .)
    ONES            reduce using rule 11 (Statement -> CompoundStatement .)
    ZEROS           reduce using rule 11 (Statement -> CompoundStatement .)
    FLOAT           reduce using rule 11 (Statement -> CompoundStatement .)
    INT             reduce using rule 11 (Statement -> CompoundStatement .)
    $end            reduce using rule 11 (Statement -> CompoundStatement .)
    }               reduce using rule 11 (Statement -> CompoundStatement .)
    ELSE            reduce using rule 11 (Statement -> CompoundStatement .)


state 12

    (13) ExpressionStatement -> Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    ;               reduce using rule 13 (ExpressionStatement -> Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 13

    (62) AssignmentStatement -> ID . MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> ID . AssignmentOperator Expression
    (23) Expression -> ID .
    (28) MatrixAccess -> . [ MatrixAccessRange , MatrixAccessRange ]
    (29) MatrixAccess -> . empty
    (64) AssignmentOperator -> . ASS_MUL
    (65) AssignmentOperator -> . ASS_DIV
    (66) AssignmentOperator -> . ASS_SUB
    (67) AssignmentOperator -> . ASS_ADD
    (68) AssignmentOperator -> . ASS
    (2) empty -> .
  ! shift/reduce conflict for ASS_MUL resolved as shift
  ! shift/reduce conflict for ASS_DIV resolved as shift
  ! shift/reduce conflict for ASS_SUB resolved as shift
  ! shift/reduce conflict for ASS_ADD resolved as shift
  ! shift/reduce conflict for ASS resolved as shift
    DIV_EL          reduce using rule 23 (Expression -> ID .)
    MUL_EL          reduce using rule 23 (Expression -> ID .)
    SUB_EL          reduce using rule 23 (Expression -> ID .)
    ADD_EL          reduce using rule 23 (Expression -> ID .)
    DIV             reduce using rule 23 (Expression -> ID .)
    MUL             reduce using rule 23 (Expression -> ID .)
    SUB             reduce using rule 23 (Expression -> ID .)
    ADD             reduce using rule 23 (Expression -> ID .)
    LESS            reduce using rule 23 (Expression -> ID .)
    GREATER         reduce using rule 23 (Expression -> ID .)
    NOT_EQ          reduce using rule 23 (Expression -> ID .)
    GREATER_EQ      reduce using rule 23 (Expression -> ID .)
    LESS_EQ         reduce using rule 23 (Expression -> ID .)
    EQ              reduce using rule 23 (Expression -> ID .)
    ;               reduce using rule 23 (Expression -> ID .)
    [               shift and go to state 54
    ASS_MUL         shift and go to state 56
    ASS_DIV         shift and go to state 57
    ASS_SUB         shift and go to state 58
    ASS_ADD         shift and go to state 59
    ASS             shift and go to state 60

    MatrixAccess                   shift and go to state 52
    AssignmentOperator             shift and go to state 53
    empty                          shift and go to state 55

state 14

    (22) PrintStatement -> PRINT . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 61
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 15

    (19) JumpStatement -> RETURN . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 63
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 16

    (20) JumpStatement -> CONTINUE .
    ;               reduce using rule 20 (JumpStatement -> CONTINUE .)


state 17

    (21) JumpStatement -> BREAK .
    ;               reduce using rule 21 (JumpStatement -> BREAK .)


state 18

    (16) IterationStatement -> FOR . ID ASS List Statement
    (17) IterationStatement -> FOR . ID ASS Range Statement
    ID              shift and go to state 64


state 19

    (18) IterationStatement -> WHILE . ( Expression ) Statement
    (               shift and go to state 65


state 20

    (14) SelectionStatement -> IF . ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> IF . ( Expression ) Statement
    (               shift and go to state 66


state 21

    (12) CompoundStatement -> { . StatementList }
    (3) StatementList -> . empty
    (4) StatementList -> . StatementList Statement
    (2) empty -> .
    }               reduce using rule 2 (empty -> .)
    ID              reduce using rule 2 (empty -> .)
    PRINT           reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    CONTINUE        reduce using rule 2 (empty -> .)
    BREAK           reduce using rule 2 (empty -> .)
    FOR             reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    {               reduce using rule 2 (empty -> .)
    STRING          reduce using rule 2 (empty -> .)
    [               reduce using rule 2 (empty -> .)
    EYE             reduce using rule 2 (empty -> .)
    ONES            reduce using rule 2 (empty -> .)
    ZEROS           reduce using rule 2 (empty -> .)
    FLOAT           reduce using rule 2 (empty -> .)
    INT             reduce using rule 2 (empty -> .)

    StatementList                  shift and go to state 67
    empty                          shift and go to state 3

state 22

    (24) Expression -> Primitive .
    DIV_EL          reduce using rule 24 (Expression -> Primitive .)
    MUL_EL          reduce using rule 24 (Expression -> Primitive .)
    SUB_EL          reduce using rule 24 (Expression -> Primitive .)
    ADD_EL          reduce using rule 24 (Expression -> Primitive .)
    DIV             reduce using rule 24 (Expression -> Primitive .)
    MUL             reduce using rule 24 (Expression -> Primitive .)
    SUB             reduce using rule 24 (Expression -> Primitive .)
    ADD             reduce using rule 24 (Expression -> Primitive .)
    LESS            reduce using rule 24 (Expression -> Primitive .)
    GREATER         reduce using rule 24 (Expression -> Primitive .)
    NOT_EQ          reduce using rule 24 (Expression -> Primitive .)
    GREATER_EQ      reduce using rule 24 (Expression -> Primitive .)
    LESS_EQ         reduce using rule 24 (Expression -> Primitive .)
    EQ              reduce using rule 24 (Expression -> Primitive .)
    ;               reduce using rule 24 (Expression -> Primitive .)
    )               reduce using rule 24 (Expression -> Primitive .)


state 23

    (25) Expression -> Matrix .
    DIV_EL          reduce using rule 25 (Expression -> Matrix .)
    MUL_EL          reduce using rule 25 (Expression -> Matrix .)
    SUB_EL          reduce using rule 25 (Expression -> Matrix .)
    ADD_EL          reduce using rule 25 (Expression -> Matrix .)
    DIV             reduce using rule 25 (Expression -> Matrix .)
    MUL             reduce using rule 25 (Expression -> Matrix .)
    SUB             reduce using rule 25 (Expression -> Matrix .)
    ADD             reduce using rule 25 (Expression -> Matrix .)
    LESS            reduce using rule 25 (Expression -> Matrix .)
    GREATER         reduce using rule 25 (Expression -> Matrix .)
    NOT_EQ          reduce using rule 25 (Expression -> Matrix .)
    GREATER_EQ      reduce using rule 25 (Expression -> Matrix .)
    LESS_EQ         reduce using rule 25 (Expression -> Matrix .)
    EQ              reduce using rule 25 (Expression -> Matrix .)
    ;               reduce using rule 25 (Expression -> Matrix .)
    )               reduce using rule 25 (Expression -> Matrix .)


state 24

    (44) Primitive -> STRING .
    DIV_EL          reduce using rule 44 (Primitive -> STRING .)
    MUL_EL          reduce using rule 44 (Primitive -> STRING .)
    SUB_EL          reduce using rule 44 (Primitive -> STRING .)
    ADD_EL          reduce using rule 44 (Primitive -> STRING .)
    DIV             reduce using rule 44 (Primitive -> STRING .)
    MUL             reduce using rule 44 (Primitive -> STRING .)
    SUB             reduce using rule 44 (Primitive -> STRING .)
    ADD             reduce using rule 44 (Primitive -> STRING .)
    LESS            reduce using rule 44 (Primitive -> STRING .)
    GREATER         reduce using rule 44 (Primitive -> STRING .)
    NOT_EQ          reduce using rule 44 (Primitive -> STRING .)
    GREATER_EQ      reduce using rule 44 (Primitive -> STRING .)
    LESS_EQ         reduce using rule 44 (Primitive -> STRING .)
    EQ              reduce using rule 44 (Primitive -> STRING .)
    ;               reduce using rule 44 (Primitive -> STRING .)
    )               reduce using rule 44 (Primitive -> STRING .)
    ,               reduce using rule 44 (Primitive -> STRING .)


state 25

    (45) Primitive -> Number .
    DIV_EL          reduce using rule 45 (Primitive -> Number .)
    MUL_EL          reduce using rule 45 (Primitive -> Number .)
    SUB_EL          reduce using rule 45 (Primitive -> Number .)
    ADD_EL          reduce using rule 45 (Primitive -> Number .)
    DIV             reduce using rule 45 (Primitive -> Number .)
    MUL             reduce using rule 45 (Primitive -> Number .)
    SUB             reduce using rule 45 (Primitive -> Number .)
    ADD             reduce using rule 45 (Primitive -> Number .)
    LESS            reduce using rule 45 (Primitive -> Number .)
    GREATER         reduce using rule 45 (Primitive -> Number .)
    NOT_EQ          reduce using rule 45 (Primitive -> Number .)
    GREATER_EQ      reduce using rule 45 (Primitive -> Number .)
    LESS_EQ         reduce using rule 45 (Primitive -> Number .)
    EQ              reduce using rule 45 (Primitive -> Number .)
    ;               reduce using rule 45 (Primitive -> Number .)
    )               reduce using rule 45 (Primitive -> Number .)
    ,               reduce using rule 45 (Primitive -> Number .)


state 26

    (46) Matrix -> [ . MatrixRowList ]
    (50) MatrixRowList -> . empty
    (51) MatrixRowList -> . [ MatrixRow ] , MatrixRowList
    (2) empty -> .
    [               shift and go to state 68
    ]               reduce using rule 2 (empty -> .)

    MatrixRowList                  shift and go to state 69
    empty                          shift and go to state 70

state 27

    (47) Matrix -> EYE . ( INT )
    (               shift and go to state 71


state 28

    (74) Number -> INT .
    DIV_EL          reduce using rule 74 (Number -> INT .)
    MUL_EL          reduce using rule 74 (Number -> INT .)
    SUB_EL          reduce using rule 74 (Number -> INT .)
    ADD_EL          reduce using rule 74 (Number -> INT .)
    DIV             reduce using rule 74 (Number -> INT .)
    MUL             reduce using rule 74 (Number -> INT .)
    SUB             reduce using rule 74 (Number -> INT .)
    ADD             reduce using rule 74 (Number -> INT .)
    LESS            reduce using rule 74 (Number -> INT .)
    GREATER         reduce using rule 74 (Number -> INT .)
    NOT_EQ          reduce using rule 74 (Number -> INT .)
    GREATER_EQ      reduce using rule 74 (Number -> INT .)
    LESS_EQ         reduce using rule 74 (Number -> INT .)
    EQ              reduce using rule 74 (Number -> INT .)
    ;               reduce using rule 74 (Number -> INT .)
    )               reduce using rule 74 (Number -> INT .)
    ,               reduce using rule 74 (Number -> INT .)
    :               reduce using rule 74 (Number -> INT .)
    ID              reduce using rule 74 (Number -> INT .)
    PRINT           reduce using rule 74 (Number -> INT .)
    RETURN          reduce using rule 74 (Number -> INT .)
    CONTINUE        reduce using rule 74 (Number -> INT .)
    BREAK           reduce using rule 74 (Number -> INT .)
    FOR             reduce using rule 74 (Number -> INT .)
    WHILE           reduce using rule 74 (Number -> INT .)
    IF              reduce using rule 74 (Number -> INT .)
    {               reduce using rule 74 (Number -> INT .)
    STRING          reduce using rule 74 (Number -> INT .)
    [               reduce using rule 74 (Number -> INT .)
    EYE             reduce using rule 74 (Number -> INT .)
    ONES            reduce using rule 74 (Number -> INT .)
    ZEROS           reduce using rule 74 (Number -> INT .)
    FLOAT           reduce using rule 74 (Number -> INT .)
    INT             reduce using rule 74 (Number -> INT .)


state 29

    (48) Matrix -> ONES . ( INT )
    (               shift and go to state 72


state 30

    (49) Matrix -> ZEROS . ( INT )
    (               shift and go to state 73


state 31

    (73) Number -> FLOAT .
    DIV_EL          reduce using rule 73 (Number -> FLOAT .)
    MUL_EL          reduce using rule 73 (Number -> FLOAT .)
    SUB_EL          reduce using rule 73 (Number -> FLOAT .)
    ADD_EL          reduce using rule 73 (Number -> FLOAT .)
    DIV             reduce using rule 73 (Number -> FLOAT .)
    MUL             reduce using rule 73 (Number -> FLOAT .)
    SUB             reduce using rule 73 (Number -> FLOAT .)
    ADD             reduce using rule 73 (Number -> FLOAT .)
    LESS            reduce using rule 73 (Number -> FLOAT .)
    GREATER         reduce using rule 73 (Number -> FLOAT .)
    NOT_EQ          reduce using rule 73 (Number -> FLOAT .)
    GREATER_EQ      reduce using rule 73 (Number -> FLOAT .)
    LESS_EQ         reduce using rule 73 (Number -> FLOAT .)
    EQ              reduce using rule 73 (Number -> FLOAT .)
    ;               reduce using rule 73 (Number -> FLOAT .)
    )               reduce using rule 73 (Number -> FLOAT .)
    ,               reduce using rule 73 (Number -> FLOAT .)
    :               reduce using rule 73 (Number -> FLOAT .)
    ID              reduce using rule 73 (Number -> FLOAT .)
    PRINT           reduce using rule 73 (Number -> FLOAT .)
    RETURN          reduce using rule 73 (Number -> FLOAT .)
    CONTINUE        reduce using rule 73 (Number -> FLOAT .)
    BREAK           reduce using rule 73 (Number -> FLOAT .)
    FOR             reduce using rule 73 (Number -> FLOAT .)
    WHILE           reduce using rule 73 (Number -> FLOAT .)
    IF              reduce using rule 73 (Number -> FLOAT .)
    {               reduce using rule 73 (Number -> FLOAT .)
    STRING          reduce using rule 73 (Number -> FLOAT .)
    [               reduce using rule 73 (Number -> FLOAT .)
    EYE             reduce using rule 73 (Number -> FLOAT .)
    ONES            reduce using rule 73 (Number -> FLOAT .)
    ZEROS           reduce using rule 73 (Number -> FLOAT .)
    FLOAT           reduce using rule 73 (Number -> FLOAT .)
    INT             reduce using rule 73 (Number -> FLOAT .)


state 32

    (5) Statement -> ExpressionStatement ; .
    ID              reduce using rule 5 (Statement -> ExpressionStatement ; .)
    PRINT           reduce using rule 5 (Statement -> ExpressionStatement ; .)
    RETURN          reduce using rule 5 (Statement -> ExpressionStatement ; .)
    CONTINUE        reduce using rule 5 (Statement -> ExpressionStatement ; .)
    BREAK           reduce using rule 5 (Statement -> ExpressionStatement ; .)
    FOR             reduce using rule 5 (Statement -> ExpressionStatement ; .)
    WHILE           reduce using rule 5 (Statement -> ExpressionStatement ; .)
    IF              reduce using rule 5 (Statement -> ExpressionStatement ; .)
    {               reduce using rule 5 (Statement -> ExpressionStatement ; .)
    STRING          reduce using rule 5 (Statement -> ExpressionStatement ; .)
    [               reduce using rule 5 (Statement -> ExpressionStatement ; .)
    EYE             reduce using rule 5 (Statement -> ExpressionStatement ; .)
    ONES            reduce using rule 5 (Statement -> ExpressionStatement ; .)
    ZEROS           reduce using rule 5 (Statement -> ExpressionStatement ; .)
    FLOAT           reduce using rule 5 (Statement -> ExpressionStatement ; .)
    INT             reduce using rule 5 (Statement -> ExpressionStatement ; .)
    $end            reduce using rule 5 (Statement -> ExpressionStatement ; .)
    }               reduce using rule 5 (Statement -> ExpressionStatement ; .)
    ELSE            reduce using rule 5 (Statement -> ExpressionStatement ; .)


state 33

    (6) Statement -> AssignmentStatement ; .
    ID              reduce using rule 6 (Statement -> AssignmentStatement ; .)
    PRINT           reduce using rule 6 (Statement -> AssignmentStatement ; .)
    RETURN          reduce using rule 6 (Statement -> AssignmentStatement ; .)
    CONTINUE        reduce using rule 6 (Statement -> AssignmentStatement ; .)
    BREAK           reduce using rule 6 (Statement -> AssignmentStatement ; .)
    FOR             reduce using rule 6 (Statement -> AssignmentStatement ; .)
    WHILE           reduce using rule 6 (Statement -> AssignmentStatement ; .)
    IF              reduce using rule 6 (Statement -> AssignmentStatement ; .)
    {               reduce using rule 6 (Statement -> AssignmentStatement ; .)
    STRING          reduce using rule 6 (Statement -> AssignmentStatement ; .)
    [               reduce using rule 6 (Statement -> AssignmentStatement ; .)
    EYE             reduce using rule 6 (Statement -> AssignmentStatement ; .)
    ONES            reduce using rule 6 (Statement -> AssignmentStatement ; .)
    ZEROS           reduce using rule 6 (Statement -> AssignmentStatement ; .)
    FLOAT           reduce using rule 6 (Statement -> AssignmentStatement ; .)
    INT             reduce using rule 6 (Statement -> AssignmentStatement ; .)
    $end            reduce using rule 6 (Statement -> AssignmentStatement ; .)
    }               reduce using rule 6 (Statement -> AssignmentStatement ; .)
    ELSE            reduce using rule 6 (Statement -> AssignmentStatement ; .)


state 34

    (7) Statement -> PrintStatement ; .
    ID              reduce using rule 7 (Statement -> PrintStatement ; .)
    PRINT           reduce using rule 7 (Statement -> PrintStatement ; .)
    RETURN          reduce using rule 7 (Statement -> PrintStatement ; .)
    CONTINUE        reduce using rule 7 (Statement -> PrintStatement ; .)
    BREAK           reduce using rule 7 (Statement -> PrintStatement ; .)
    FOR             reduce using rule 7 (Statement -> PrintStatement ; .)
    WHILE           reduce using rule 7 (Statement -> PrintStatement ; .)
    IF              reduce using rule 7 (Statement -> PrintStatement ; .)
    {               reduce using rule 7 (Statement -> PrintStatement ; .)
    STRING          reduce using rule 7 (Statement -> PrintStatement ; .)
    [               reduce using rule 7 (Statement -> PrintStatement ; .)
    EYE             reduce using rule 7 (Statement -> PrintStatement ; .)
    ONES            reduce using rule 7 (Statement -> PrintStatement ; .)
    ZEROS           reduce using rule 7 (Statement -> PrintStatement ; .)
    FLOAT           reduce using rule 7 (Statement -> PrintStatement ; .)
    INT             reduce using rule 7 (Statement -> PrintStatement ; .)
    $end            reduce using rule 7 (Statement -> PrintStatement ; .)
    }               reduce using rule 7 (Statement -> PrintStatement ; .)
    ELSE            reduce using rule 7 (Statement -> PrintStatement ; .)


state 35

    (8) Statement -> JumpStatement ; .
    ID              reduce using rule 8 (Statement -> JumpStatement ; .)
    PRINT           reduce using rule 8 (Statement -> JumpStatement ; .)
    RETURN          reduce using rule 8 (Statement -> JumpStatement ; .)
    CONTINUE        reduce using rule 8 (Statement -> JumpStatement ; .)
    BREAK           reduce using rule 8 (Statement -> JumpStatement ; .)
    FOR             reduce using rule 8 (Statement -> JumpStatement ; .)
    WHILE           reduce using rule 8 (Statement -> JumpStatement ; .)
    IF              reduce using rule 8 (Statement -> JumpStatement ; .)
    {               reduce using rule 8 (Statement -> JumpStatement ; .)
    STRING          reduce using rule 8 (Statement -> JumpStatement ; .)
    [               reduce using rule 8 (Statement -> JumpStatement ; .)
    EYE             reduce using rule 8 (Statement -> JumpStatement ; .)
    ONES            reduce using rule 8 (Statement -> JumpStatement ; .)
    ZEROS           reduce using rule 8 (Statement -> JumpStatement ; .)
    FLOAT           reduce using rule 8 (Statement -> JumpStatement ; .)
    INT             reduce using rule 8 (Statement -> JumpStatement ; .)
    $end            reduce using rule 8 (Statement -> JumpStatement ; .)
    }               reduce using rule 8 (Statement -> JumpStatement ; .)
    ELSE            reduce using rule 8 (Statement -> JumpStatement ; .)


state 36

    (26) Expression -> Expression BinaryOperator . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 74
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 37

    (27) Expression -> Expression ComparisonOperator . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 75
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 38

    (54) BinaryOperator -> DIV_EL .
    ID              reduce using rule 54 (BinaryOperator -> DIV_EL .)
    STRING          reduce using rule 54 (BinaryOperator -> DIV_EL .)
    [               reduce using rule 54 (BinaryOperator -> DIV_EL .)
    EYE             reduce using rule 54 (BinaryOperator -> DIV_EL .)
    ONES            reduce using rule 54 (BinaryOperator -> DIV_EL .)
    ZEROS           reduce using rule 54 (BinaryOperator -> DIV_EL .)
    FLOAT           reduce using rule 54 (BinaryOperator -> DIV_EL .)
    INT             reduce using rule 54 (BinaryOperator -> DIV_EL .)


state 39

    (55) BinaryOperator -> MUL_EL .
    ID              reduce using rule 55 (BinaryOperator -> MUL_EL .)
    STRING          reduce using rule 55 (BinaryOperator -> MUL_EL .)
    [               reduce using rule 55 (BinaryOperator -> MUL_EL .)
    EYE             reduce using rule 55 (BinaryOperator -> MUL_EL .)
    ONES            reduce using rule 55 (BinaryOperator -> MUL_EL .)
    ZEROS           reduce using rule 55 (BinaryOperator -> MUL_EL .)
    FLOAT           reduce using rule 55 (BinaryOperator -> MUL_EL .)
    INT             reduce using rule 55 (BinaryOperator -> MUL_EL .)


state 40

    (56) BinaryOperator -> SUB_EL .
    ID              reduce using rule 56 (BinaryOperator -> SUB_EL .)
    STRING          reduce using rule 56 (BinaryOperator -> SUB_EL .)
    [               reduce using rule 56 (BinaryOperator -> SUB_EL .)
    EYE             reduce using rule 56 (BinaryOperator -> SUB_EL .)
    ONES            reduce using rule 56 (BinaryOperator -> SUB_EL .)
    ZEROS           reduce using rule 56 (BinaryOperator -> SUB_EL .)
    FLOAT           reduce using rule 56 (BinaryOperator -> SUB_EL .)
    INT             reduce using rule 56 (BinaryOperator -> SUB_EL .)


state 41

    (57) BinaryOperator -> ADD_EL .
    ID              reduce using rule 57 (BinaryOperator -> ADD_EL .)
    STRING          reduce using rule 57 (BinaryOperator -> ADD_EL .)
    [               reduce using rule 57 (BinaryOperator -> ADD_EL .)
    EYE             reduce using rule 57 (BinaryOperator -> ADD_EL .)
    ONES            reduce using rule 57 (BinaryOperator -> ADD_EL .)
    ZEROS           reduce using rule 57 (BinaryOperator -> ADD_EL .)
    FLOAT           reduce using rule 57 (BinaryOperator -> ADD_EL .)
    INT             reduce using rule 57 (BinaryOperator -> ADD_EL .)


state 42

    (58) BinaryOperator -> DIV .
    ID              reduce using rule 58 (BinaryOperator -> DIV .)
    STRING          reduce using rule 58 (BinaryOperator -> DIV .)
    [               reduce using rule 58 (BinaryOperator -> DIV .)
    EYE             reduce using rule 58 (BinaryOperator -> DIV .)
    ONES            reduce using rule 58 (BinaryOperator -> DIV .)
    ZEROS           reduce using rule 58 (BinaryOperator -> DIV .)
    FLOAT           reduce using rule 58 (BinaryOperator -> DIV .)
    INT             reduce using rule 58 (BinaryOperator -> DIV .)


state 43

    (59) BinaryOperator -> MUL .
    ID              reduce using rule 59 (BinaryOperator -> MUL .)
    STRING          reduce using rule 59 (BinaryOperator -> MUL .)
    [               reduce using rule 59 (BinaryOperator -> MUL .)
    EYE             reduce using rule 59 (BinaryOperator -> MUL .)
    ONES            reduce using rule 59 (BinaryOperator -> MUL .)
    ZEROS           reduce using rule 59 (BinaryOperator -> MUL .)
    FLOAT           reduce using rule 59 (BinaryOperator -> MUL .)
    INT             reduce using rule 59 (BinaryOperator -> MUL .)


state 44

    (60) BinaryOperator -> SUB .
    ID              reduce using rule 60 (BinaryOperator -> SUB .)
    STRING          reduce using rule 60 (BinaryOperator -> SUB .)
    [               reduce using rule 60 (BinaryOperator -> SUB .)
    EYE             reduce using rule 60 (BinaryOperator -> SUB .)
    ONES            reduce using rule 60 (BinaryOperator -> SUB .)
    ZEROS           reduce using rule 60 (BinaryOperator -> SUB .)
    FLOAT           reduce using rule 60 (BinaryOperator -> SUB .)
    INT             reduce using rule 60 (BinaryOperator -> SUB .)


state 45

    (61) BinaryOperator -> ADD .
    ID              reduce using rule 61 (BinaryOperator -> ADD .)
    STRING          reduce using rule 61 (BinaryOperator -> ADD .)
    [               reduce using rule 61 (BinaryOperator -> ADD .)
    EYE             reduce using rule 61 (BinaryOperator -> ADD .)
    ONES            reduce using rule 61 (BinaryOperator -> ADD .)
    ZEROS           reduce using rule 61 (BinaryOperator -> ADD .)
    FLOAT           reduce using rule 61 (BinaryOperator -> ADD .)
    INT             reduce using rule 61 (BinaryOperator -> ADD .)


state 46

    (75) ComparisonOperator -> LESS .
    ID              reduce using rule 75 (ComparisonOperator -> LESS .)
    STRING          reduce using rule 75 (ComparisonOperator -> LESS .)
    [               reduce using rule 75 (ComparisonOperator -> LESS .)
    EYE             reduce using rule 75 (ComparisonOperator -> LESS .)
    ONES            reduce using rule 75 (ComparisonOperator -> LESS .)
    ZEROS           reduce using rule 75 (ComparisonOperator -> LESS .)
    FLOAT           reduce using rule 75 (ComparisonOperator -> LESS .)
    INT             reduce using rule 75 (ComparisonOperator -> LESS .)


state 47

    (76) ComparisonOperator -> GREATER .
    ID              reduce using rule 76 (ComparisonOperator -> GREATER .)
    STRING          reduce using rule 76 (ComparisonOperator -> GREATER .)
    [               reduce using rule 76 (ComparisonOperator -> GREATER .)
    EYE             reduce using rule 76 (ComparisonOperator -> GREATER .)
    ONES            reduce using rule 76 (ComparisonOperator -> GREATER .)
    ZEROS           reduce using rule 76 (ComparisonOperator -> GREATER .)
    FLOAT           reduce using rule 76 (ComparisonOperator -> GREATER .)
    INT             reduce using rule 76 (ComparisonOperator -> GREATER .)


state 48

    (77) ComparisonOperator -> NOT_EQ .
    ID              reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    STRING          reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    [               reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    EYE             reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    ONES            reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    ZEROS           reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    FLOAT           reduce using rule 77 (ComparisonOperator -> NOT_EQ .)
    INT             reduce using rule 77 (ComparisonOperator -> NOT_EQ .)


state 49

    (78) ComparisonOperator -> GREATER_EQ .
    ID              reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    STRING          reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    [               reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    EYE             reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    ONES            reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    ZEROS           reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    FLOAT           reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)
    INT             reduce using rule 78 (ComparisonOperator -> GREATER_EQ .)


state 50

    (79) ComparisonOperator -> LESS_EQ .
    ID              reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    STRING          reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    [               reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    EYE             reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    ONES            reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    ZEROS           reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    FLOAT           reduce using rule 79 (ComparisonOperator -> LESS_EQ .)
    INT             reduce using rule 79 (ComparisonOperator -> LESS_EQ .)


state 51

    (80) ComparisonOperator -> EQ .
    ID              reduce using rule 80 (ComparisonOperator -> EQ .)
    STRING          reduce using rule 80 (ComparisonOperator -> EQ .)
    [               reduce using rule 80 (ComparisonOperator -> EQ .)
    EYE             reduce using rule 80 (ComparisonOperator -> EQ .)
    ONES            reduce using rule 80 (ComparisonOperator -> EQ .)
    ZEROS           reduce using rule 80 (ComparisonOperator -> EQ .)
    FLOAT           reduce using rule 80 (ComparisonOperator -> EQ .)
    INT             reduce using rule 80 (ComparisonOperator -> EQ .)


state 52

    (62) AssignmentStatement -> ID MatrixAccess . AssignmentOperator Expression
    (64) AssignmentOperator -> . ASS_MUL
    (65) AssignmentOperator -> . ASS_DIV
    (66) AssignmentOperator -> . ASS_SUB
    (67) AssignmentOperator -> . ASS_ADD
    (68) AssignmentOperator -> . ASS
    ASS_MUL         shift and go to state 56
    ASS_DIV         shift and go to state 57
    ASS_SUB         shift and go to state 58
    ASS_ADD         shift and go to state 59
    ASS             shift and go to state 60

    AssignmentOperator             shift and go to state 76

state 53

    (63) AssignmentStatement -> ID AssignmentOperator . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 77
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 54

    (28) MatrixAccess -> [ . MatrixAccessRange , MatrixAccessRange ]
    (30) MatrixAccessRange -> . MatrixAccessRangeElement
    (31) MatrixAccessRange -> . MatrixAccessRangeElement : MatrixAccessRangeElement
    (32) MatrixAccessRangeElement -> . ID
    (33) MatrixAccessRangeElement -> . INT
    ID              shift and go to state 80
    INT             shift and go to state 81

    MatrixAccessRange              shift and go to state 78
    MatrixAccessRangeElement       shift and go to state 79

state 55

    (29) MatrixAccess -> empty .
    ASS_MUL         reduce using rule 29 (MatrixAccess -> empty .)
    ASS_DIV         reduce using rule 29 (MatrixAccess -> empty .)
    ASS_SUB         reduce using rule 29 (MatrixAccess -> empty .)
    ASS_ADD         reduce using rule 29 (MatrixAccess -> empty .)
    ASS             reduce using rule 29 (MatrixAccess -> empty .)


state 56

    (64) AssignmentOperator -> ASS_MUL .
    ID              reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    STRING          reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    [               reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    EYE             reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    ONES            reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    ZEROS           reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    FLOAT           reduce using rule 64 (AssignmentOperator -> ASS_MUL .)
    INT             reduce using rule 64 (AssignmentOperator -> ASS_MUL .)


state 57

    (65) AssignmentOperator -> ASS_DIV .
    ID              reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    STRING          reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    [               reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    EYE             reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    ONES            reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    ZEROS           reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    FLOAT           reduce using rule 65 (AssignmentOperator -> ASS_DIV .)
    INT             reduce using rule 65 (AssignmentOperator -> ASS_DIV .)


state 58

    (66) AssignmentOperator -> ASS_SUB .
    ID              reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    STRING          reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    [               reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    EYE             reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    ONES            reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    ZEROS           reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    FLOAT           reduce using rule 66 (AssignmentOperator -> ASS_SUB .)
    INT             reduce using rule 66 (AssignmentOperator -> ASS_SUB .)


state 59

    (67) AssignmentOperator -> ASS_ADD .
    ID              reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    STRING          reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    [               reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    EYE             reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    ONES            reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    ZEROS           reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    FLOAT           reduce using rule 67 (AssignmentOperator -> ASS_ADD .)
    INT             reduce using rule 67 (AssignmentOperator -> ASS_ADD .)


state 60

    (68) AssignmentOperator -> ASS .
    ID              reduce using rule 68 (AssignmentOperator -> ASS .)
    STRING          reduce using rule 68 (AssignmentOperator -> ASS .)
    [               reduce using rule 68 (AssignmentOperator -> ASS .)
    EYE             reduce using rule 68 (AssignmentOperator -> ASS .)
    ONES            reduce using rule 68 (AssignmentOperator -> ASS .)
    ZEROS           reduce using rule 68 (AssignmentOperator -> ASS .)
    FLOAT           reduce using rule 68 (AssignmentOperator -> ASS .)
    INT             reduce using rule 68 (AssignmentOperator -> ASS .)


state 61

    (22) PrintStatement -> PRINT Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    ;               reduce using rule 22 (PrintStatement -> PRINT Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 62

    (23) Expression -> ID .
    DIV_EL          reduce using rule 23 (Expression -> ID .)
    MUL_EL          reduce using rule 23 (Expression -> ID .)
    SUB_EL          reduce using rule 23 (Expression -> ID .)
    ADD_EL          reduce using rule 23 (Expression -> ID .)
    DIV             reduce using rule 23 (Expression -> ID .)
    MUL             reduce using rule 23 (Expression -> ID .)
    SUB             reduce using rule 23 (Expression -> ID .)
    ADD             reduce using rule 23 (Expression -> ID .)
    LESS            reduce using rule 23 (Expression -> ID .)
    GREATER         reduce using rule 23 (Expression -> ID .)
    NOT_EQ          reduce using rule 23 (Expression -> ID .)
    GREATER_EQ      reduce using rule 23 (Expression -> ID .)
    LESS_EQ         reduce using rule 23 (Expression -> ID .)
    EQ              reduce using rule 23 (Expression -> ID .)
    ;               reduce using rule 23 (Expression -> ID .)
    )               reduce using rule 23 (Expression -> ID .)


state 63

    (19) JumpStatement -> RETURN Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    ;               reduce using rule 19 (JumpStatement -> RETURN Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 64

    (16) IterationStatement -> FOR ID . ASS List Statement
    (17) IterationStatement -> FOR ID . ASS Range Statement
    ASS             shift and go to state 82


state 65

    (18) IterationStatement -> WHILE ( . Expression ) Statement
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 83
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 66

    (14) SelectionStatement -> IF ( . Expression ) Statement ELSE Statement
    (15) SelectionStatement -> IF ( . Expression ) Statement
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 84
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 67

    (12) CompoundStatement -> { StatementList . }
    (4) StatementList -> StatementList . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    }               shift and go to state 85
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Statement                      shift and go to state 4
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Expression                     shift and go to state 12
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 68

    (51) MatrixRowList -> [ . MatrixRow ] , MatrixRowList
    (52) MatrixRow -> . empty
    (53) MatrixRow -> . Number , MatrixRow
    (2) empty -> .
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ]               reduce using rule 2 (empty -> .)
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    MatrixRow                      shift and go to state 86
    empty                          shift and go to state 87
    Number                         shift and go to state 88

state 69

    (46) Matrix -> [ MatrixRowList . ]
    ]               shift and go to state 89


state 70

    (50) MatrixRowList -> empty .
    ]               reduce using rule 50 (MatrixRowList -> empty .)


state 71

    (47) Matrix -> EYE ( . INT )
    INT             shift and go to state 90


state 72

    (48) Matrix -> ONES ( . INT )
    INT             shift and go to state 91


state 73

    (49) Matrix -> ZEROS ( . INT )
    INT             shift and go to state 92


state 74

    (26) Expression -> Expression BinaryOperator Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
  ! shift/reduce conflict for DIV_EL resolved as shift
  ! shift/reduce conflict for MUL_EL resolved as shift
  ! shift/reduce conflict for SUB_EL resolved as shift
  ! shift/reduce conflict for ADD_EL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    ;               reduce using rule 26 (Expression -> Expression BinaryOperator Expression .)
    )               reduce using rule 26 (Expression -> Expression BinaryOperator Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 75

    (27) Expression -> Expression ComparisonOperator Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
  ! shift/reduce conflict for DIV_EL resolved as shift
  ! shift/reduce conflict for MUL_EL resolved as shift
  ! shift/reduce conflict for SUB_EL resolved as shift
  ! shift/reduce conflict for ADD_EL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOT_EQ resolved as shift
  ! shift/reduce conflict for GREATER_EQ resolved as shift
  ! shift/reduce conflict for LESS_EQ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    ;               reduce using rule 27 (Expression -> Expression ComparisonOperator Expression .)
    )               reduce using rule 27 (Expression -> Expression ComparisonOperator Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    ComparisonOperator             shift and go to state 37
    BinaryOperator                 shift and go to state 36

state 76

    (62) AssignmentStatement -> ID MatrixAccess AssignmentOperator . Expression
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 62
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 93
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 77

    (63) AssignmentStatement -> ID AssignmentOperator Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    ;               reduce using rule 63 (AssignmentStatement -> ID AssignmentOperator Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 78

    (28) MatrixAccess -> [ MatrixAccessRange . , MatrixAccessRange ]
    ,               shift and go to state 94


state 79

    (30) MatrixAccessRange -> MatrixAccessRangeElement .
    (31) MatrixAccessRange -> MatrixAccessRangeElement . : MatrixAccessRangeElement
    ,               reduce using rule 30 (MatrixAccessRange -> MatrixAccessRangeElement .)
    ]               reduce using rule 30 (MatrixAccessRange -> MatrixAccessRangeElement .)
    :               shift and go to state 95


state 80

    (32) MatrixAccessRangeElement -> ID .
    :               reduce using rule 32 (MatrixAccessRangeElement -> ID .)
    ,               reduce using rule 32 (MatrixAccessRangeElement -> ID .)
    ]               reduce using rule 32 (MatrixAccessRangeElement -> ID .)


state 81

    (33) MatrixAccessRangeElement -> INT .
    :               reduce using rule 33 (MatrixAccessRangeElement -> INT .)
    ,               reduce using rule 33 (MatrixAccessRangeElement -> INT .)
    ]               reduce using rule 33 (MatrixAccessRangeElement -> INT .)


state 82

    (16) IterationStatement -> FOR ID ASS . List Statement
    (17) IterationStatement -> FOR ID ASS . Range Statement
    (38) List -> . [ ListContent ]
    (34) Range -> . RangeElement : RangeElement : RangeElement
    (35) Range -> . RangeElement : RangeElement
    (36) RangeElement -> . ID
    (37) RangeElement -> . Number
    (73) Number -> . FLOAT
    (74) Number -> . INT
    [               shift and go to state 99
    ID              shift and go to state 96
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    List                           shift and go to state 97
    Range                          shift and go to state 98
    RangeElement                   shift and go to state 100
    Number                         shift and go to state 101

state 83

    (18) IterationStatement -> WHILE ( Expression . ) Statement
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    )               shift and go to state 102
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 84

    (14) SelectionStatement -> IF ( Expression . ) Statement ELSE Statement
    (15) SelectionStatement -> IF ( Expression . ) Statement
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    )               shift and go to state 103
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 85

    (12) CompoundStatement -> { StatementList } .
    ID              reduce using rule 12 (CompoundStatement -> { StatementList } .)
    PRINT           reduce using rule 12 (CompoundStatement -> { StatementList } .)
    RETURN          reduce using rule 12 (CompoundStatement -> { StatementList } .)
    CONTINUE        reduce using rule 12 (CompoundStatement -> { StatementList } .)
    BREAK           reduce using rule 12 (CompoundStatement -> { StatementList } .)
    FOR             reduce using rule 12 (CompoundStatement -> { StatementList } .)
    WHILE           reduce using rule 12 (CompoundStatement -> { StatementList } .)
    IF              reduce using rule 12 (CompoundStatement -> { StatementList } .)
    {               reduce using rule 12 (CompoundStatement -> { StatementList } .)
    STRING          reduce using rule 12 (CompoundStatement -> { StatementList } .)
    [               reduce using rule 12 (CompoundStatement -> { StatementList } .)
    EYE             reduce using rule 12 (CompoundStatement -> { StatementList } .)
    ONES            reduce using rule 12 (CompoundStatement -> { StatementList } .)
    ZEROS           reduce using rule 12 (CompoundStatement -> { StatementList } .)
    FLOAT           reduce using rule 12 (CompoundStatement -> { StatementList } .)
    INT             reduce using rule 12 (CompoundStatement -> { StatementList } .)
    $end            reduce using rule 12 (CompoundStatement -> { StatementList } .)
    }               reduce using rule 12 (CompoundStatement -> { StatementList } .)
    ELSE            reduce using rule 12 (CompoundStatement -> { StatementList } .)


state 86

    (51) MatrixRowList -> [ MatrixRow . ] , MatrixRowList
    ]               shift and go to state 104


state 87

    (52) MatrixRow -> empty .
    ]               reduce using rule 52 (MatrixRow -> empty .)


state 88

    (53) MatrixRow -> Number . , MatrixRow
    ,               shift and go to state 105


state 89

    (46) Matrix -> [ MatrixRowList ] .
    DIV_EL          reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    MUL_EL          reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    SUB_EL          reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    ADD_EL          reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    DIV             reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    MUL             reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    SUB             reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    ADD             reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    LESS            reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    GREATER         reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    NOT_EQ          reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    GREATER_EQ      reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    LESS_EQ         reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    EQ              reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    ;               reduce using rule 46 (Matrix -> [ MatrixRowList ] .)
    )               reduce using rule 46 (Matrix -> [ MatrixRowList ] .)


state 90

    (47) Matrix -> EYE ( INT . )
    )               shift and go to state 106


state 91

    (48) Matrix -> ONES ( INT . )
    )               shift and go to state 107


state 92

    (49) Matrix -> ZEROS ( INT . )
    )               shift and go to state 108


state 93

    (62) AssignmentStatement -> ID MatrixAccess AssignmentOperator Expression .
    (26) Expression -> Expression . BinaryOperator Expression
    (27) Expression -> Expression . ComparisonOperator Expression
    (54) BinaryOperator -> . DIV_EL
    (55) BinaryOperator -> . MUL_EL
    (56) BinaryOperator -> . SUB_EL
    (57) BinaryOperator -> . ADD_EL
    (58) BinaryOperator -> . DIV
    (59) BinaryOperator -> . MUL
    (60) BinaryOperator -> . SUB
    (61) BinaryOperator -> . ADD
    (75) ComparisonOperator -> . LESS
    (76) ComparisonOperator -> . GREATER
    (77) ComparisonOperator -> . NOT_EQ
    (78) ComparisonOperator -> . GREATER_EQ
    (79) ComparisonOperator -> . LESS_EQ
    (80) ComparisonOperator -> . EQ
    ;               reduce using rule 62 (AssignmentStatement -> ID MatrixAccess AssignmentOperator Expression .)
    DIV_EL          shift and go to state 38
    MUL_EL          shift and go to state 39
    SUB_EL          shift and go to state 40
    ADD_EL          shift and go to state 41
    DIV             shift and go to state 42
    MUL             shift and go to state 43
    SUB             shift and go to state 44
    ADD             shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    NOT_EQ          shift and go to state 48
    GREATER_EQ      shift and go to state 49
    LESS_EQ         shift and go to state 50
    EQ              shift and go to state 51

    BinaryOperator                 shift and go to state 36
    ComparisonOperator             shift and go to state 37

state 94

    (28) MatrixAccess -> [ MatrixAccessRange , . MatrixAccessRange ]
    (30) MatrixAccessRange -> . MatrixAccessRangeElement
    (31) MatrixAccessRange -> . MatrixAccessRangeElement : MatrixAccessRangeElement
    (32) MatrixAccessRangeElement -> . ID
    (33) MatrixAccessRangeElement -> . INT
    ID              shift and go to state 80
    INT             shift and go to state 81

    MatrixAccessRange              shift and go to state 109
    MatrixAccessRangeElement       shift and go to state 79

state 95

    (31) MatrixAccessRange -> MatrixAccessRangeElement : . MatrixAccessRangeElement
    (32) MatrixAccessRangeElement -> . ID
    (33) MatrixAccessRangeElement -> . INT
    ID              shift and go to state 80
    INT             shift and go to state 81

    MatrixAccessRangeElement       shift and go to state 110

state 96

    (36) RangeElement -> ID .
    :               reduce using rule 36 (RangeElement -> ID .)
    ID              reduce using rule 36 (RangeElement -> ID .)
    PRINT           reduce using rule 36 (RangeElement -> ID .)
    RETURN          reduce using rule 36 (RangeElement -> ID .)
    CONTINUE        reduce using rule 36 (RangeElement -> ID .)
    BREAK           reduce using rule 36 (RangeElement -> ID .)
    FOR             reduce using rule 36 (RangeElement -> ID .)
    WHILE           reduce using rule 36 (RangeElement -> ID .)
    IF              reduce using rule 36 (RangeElement -> ID .)
    {               reduce using rule 36 (RangeElement -> ID .)
    STRING          reduce using rule 36 (RangeElement -> ID .)
    [               reduce using rule 36 (RangeElement -> ID .)
    EYE             reduce using rule 36 (RangeElement -> ID .)
    ONES            reduce using rule 36 (RangeElement -> ID .)
    ZEROS           reduce using rule 36 (RangeElement -> ID .)
    FLOAT           reduce using rule 36 (RangeElement -> ID .)
    INT             reduce using rule 36 (RangeElement -> ID .)


state 97

    (16) IterationStatement -> FOR ID ASS List . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Statement                      shift and go to state 111
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Expression                     shift and go to state 12
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 98

    (17) IterationStatement -> FOR ID ASS Range . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Statement                      shift and go to state 112
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Expression                     shift and go to state 12
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 99

    (38) List -> [ . ListContent ]
    (39) ListContent -> . empty
    (40) ListContent -> . ListEl , ListContent
    (2) empty -> .
    (41) ListEl -> . List
    (42) ListEl -> . Primitive
    (43) ListEl -> . ID
    (38) List -> . [ ListContent ]
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ]               reduce using rule 2 (empty -> .)
    ID              shift and go to state 118
    [               shift and go to state 99
    STRING          shift and go to state 24
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    ListContent                    shift and go to state 113
    empty                          shift and go to state 114
    ListEl                         shift and go to state 115
    List                           shift and go to state 116
    Primitive                      shift and go to state 117
    Number                         shift and go to state 25

state 100

    (34) Range -> RangeElement . : RangeElement : RangeElement
    (35) Range -> RangeElement . : RangeElement
    :               shift and go to state 119


state 101

    (37) RangeElement -> Number .
    :               reduce using rule 37 (RangeElement -> Number .)
    ID              reduce using rule 37 (RangeElement -> Number .)
    PRINT           reduce using rule 37 (RangeElement -> Number .)
    RETURN          reduce using rule 37 (RangeElement -> Number .)
    CONTINUE        reduce using rule 37 (RangeElement -> Number .)
    BREAK           reduce using rule 37 (RangeElement -> Number .)
    FOR             reduce using rule 37 (RangeElement -> Number .)
    WHILE           reduce using rule 37 (RangeElement -> Number .)
    IF              reduce using rule 37 (RangeElement -> Number .)
    {               reduce using rule 37 (RangeElement -> Number .)
    STRING          reduce using rule 37 (RangeElement -> Number .)
    [               reduce using rule 37 (RangeElement -> Number .)
    EYE             reduce using rule 37 (RangeElement -> Number .)
    ONES            reduce using rule 37 (RangeElement -> Number .)
    ZEROS           reduce using rule 37 (RangeElement -> Number .)
    FLOAT           reduce using rule 37 (RangeElement -> Number .)
    INT             reduce using rule 37 (RangeElement -> Number .)


state 102

    (18) IterationStatement -> WHILE ( Expression ) . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 12
    Statement                      shift and go to state 120
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 103

    (14) SelectionStatement -> IF ( Expression ) . Statement ELSE Statement
    (15) SelectionStatement -> IF ( Expression ) . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 12
    Statement                      shift and go to state 121
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 104

    (51) MatrixRowList -> [ MatrixRow ] . , MatrixRowList
    ,               shift and go to state 122


state 105

    (53) MatrixRow -> Number , . MatrixRow
    (52) MatrixRow -> . empty
    (53) MatrixRow -> . Number , MatrixRow
    (2) empty -> .
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ]               reduce using rule 2 (empty -> .)
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Number                         shift and go to state 88
    MatrixRow                      shift and go to state 123
    empty                          shift and go to state 87

state 106

    (47) Matrix -> EYE ( INT ) .
    DIV_EL          reduce using rule 47 (Matrix -> EYE ( INT ) .)
    MUL_EL          reduce using rule 47 (Matrix -> EYE ( INT ) .)
    SUB_EL          reduce using rule 47 (Matrix -> EYE ( INT ) .)
    ADD_EL          reduce using rule 47 (Matrix -> EYE ( INT ) .)
    DIV             reduce using rule 47 (Matrix -> EYE ( INT ) .)
    MUL             reduce using rule 47 (Matrix -> EYE ( INT ) .)
    SUB             reduce using rule 47 (Matrix -> EYE ( INT ) .)
    ADD             reduce using rule 47 (Matrix -> EYE ( INT ) .)
    LESS            reduce using rule 47 (Matrix -> EYE ( INT ) .)
    GREATER         reduce using rule 47 (Matrix -> EYE ( INT ) .)
    NOT_EQ          reduce using rule 47 (Matrix -> EYE ( INT ) .)
    GREATER_EQ      reduce using rule 47 (Matrix -> EYE ( INT ) .)
    LESS_EQ         reduce using rule 47 (Matrix -> EYE ( INT ) .)
    EQ              reduce using rule 47 (Matrix -> EYE ( INT ) .)
    ;               reduce using rule 47 (Matrix -> EYE ( INT ) .)
    )               reduce using rule 47 (Matrix -> EYE ( INT ) .)


state 107

    (48) Matrix -> ONES ( INT ) .
    DIV_EL          reduce using rule 48 (Matrix -> ONES ( INT ) .)
    MUL_EL          reduce using rule 48 (Matrix -> ONES ( INT ) .)
    SUB_EL          reduce using rule 48 (Matrix -> ONES ( INT ) .)
    ADD_EL          reduce using rule 48 (Matrix -> ONES ( INT ) .)
    DIV             reduce using rule 48 (Matrix -> ONES ( INT ) .)
    MUL             reduce using rule 48 (Matrix -> ONES ( INT ) .)
    SUB             reduce using rule 48 (Matrix -> ONES ( INT ) .)
    ADD             reduce using rule 48 (Matrix -> ONES ( INT ) .)
    LESS            reduce using rule 48 (Matrix -> ONES ( INT ) .)
    GREATER         reduce using rule 48 (Matrix -> ONES ( INT ) .)
    NOT_EQ          reduce using rule 48 (Matrix -> ONES ( INT ) .)
    GREATER_EQ      reduce using rule 48 (Matrix -> ONES ( INT ) .)
    LESS_EQ         reduce using rule 48 (Matrix -> ONES ( INT ) .)
    EQ              reduce using rule 48 (Matrix -> ONES ( INT ) .)
    ;               reduce using rule 48 (Matrix -> ONES ( INT ) .)
    )               reduce using rule 48 (Matrix -> ONES ( INT ) .)


state 108

    (49) Matrix -> ZEROS ( INT ) .
    DIV_EL          reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    MUL_EL          reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    SUB_EL          reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    ADD_EL          reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    DIV             reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    MUL             reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    SUB             reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    ADD             reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    LESS            reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    GREATER         reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    NOT_EQ          reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    GREATER_EQ      reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    LESS_EQ         reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    EQ              reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    ;               reduce using rule 49 (Matrix -> ZEROS ( INT ) .)
    )               reduce using rule 49 (Matrix -> ZEROS ( INT ) .)


state 109

    (28) MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange . ]
    ]               shift and go to state 124


state 110

    (31) MatrixAccessRange -> MatrixAccessRangeElement : MatrixAccessRangeElement .
    ,               reduce using rule 31 (MatrixAccessRange -> MatrixAccessRangeElement : MatrixAccessRangeElement .)
    ]               reduce using rule 31 (MatrixAccessRange -> MatrixAccessRangeElement : MatrixAccessRangeElement .)


state 111

    (16) IterationStatement -> FOR ID ASS List Statement .
    ID              reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    PRINT           reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    RETURN          reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    CONTINUE        reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    BREAK           reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    FOR             reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    WHILE           reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    IF              reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    {               reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    STRING          reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    [               reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    EYE             reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    ONES            reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    ZEROS           reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    FLOAT           reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    INT             reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    $end            reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    }               reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)
    ELSE            reduce using rule 16 (IterationStatement -> FOR ID ASS List Statement .)


state 112

    (17) IterationStatement -> FOR ID ASS Range Statement .
    ID              reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    PRINT           reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    RETURN          reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    CONTINUE        reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    BREAK           reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    FOR             reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    WHILE           reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    IF              reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    {               reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    STRING          reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    [               reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    EYE             reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    ONES            reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    ZEROS           reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    FLOAT           reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    INT             reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    $end            reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    }               reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)
    ELSE            reduce using rule 17 (IterationStatement -> FOR ID ASS Range Statement .)


state 113

    (38) List -> [ ListContent . ]
    ]               shift and go to state 125


state 114

    (39) ListContent -> empty .
    ]               reduce using rule 39 (ListContent -> empty .)


state 115

    (40) ListContent -> ListEl . , ListContent
    ,               shift and go to state 126


state 116

    (41) ListEl -> List .
    ,               reduce using rule 41 (ListEl -> List .)


state 117

    (42) ListEl -> Primitive .
    ,               reduce using rule 42 (ListEl -> Primitive .)


state 118

    (43) ListEl -> ID .
    ,               reduce using rule 43 (ListEl -> ID .)


state 119

    (34) Range -> RangeElement : . RangeElement : RangeElement
    (35) Range -> RangeElement : . RangeElement
    (36) RangeElement -> . ID
    (37) RangeElement -> . Number
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 96
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    RangeElement                   shift and go to state 127
    Number                         shift and go to state 101

state 120

    (18) IterationStatement -> WHILE ( Expression ) Statement .
    ID              reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    PRINT           reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    RETURN          reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    CONTINUE        reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    BREAK           reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    FOR             reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    WHILE           reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    IF              reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    {               reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    STRING          reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    [               reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    EYE             reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    ONES            reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    ZEROS           reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    FLOAT           reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    INT             reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    $end            reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    }               reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)
    ELSE            reduce using rule 18 (IterationStatement -> WHILE ( Expression ) Statement .)


state 121

    (14) SelectionStatement -> IF ( Expression ) Statement . ELSE Statement
    (15) SelectionStatement -> IF ( Expression ) Statement .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 128
    ID              reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    PRINT           reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    RETURN          reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    CONTINUE        reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    BREAK           reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    FOR             reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    WHILE           reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    IF              reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    {               reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    STRING          reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    [               reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    EYE             reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    ONES            reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    ZEROS           reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    FLOAT           reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    INT             reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    $end            reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)
    }               reduce using rule 15 (SelectionStatement -> IF ( Expression ) Statement .)


state 122

    (51) MatrixRowList -> [ MatrixRow ] , . MatrixRowList
    (50) MatrixRowList -> . empty
    (51) MatrixRowList -> . [ MatrixRow ] , MatrixRowList
    (2) empty -> .
    [               shift and go to state 68
    ]               reduce using rule 2 (empty -> .)

    MatrixRowList                  shift and go to state 129
    empty                          shift and go to state 70

state 123

    (53) MatrixRow -> Number , MatrixRow .
    ]               reduce using rule 53 (MatrixRow -> Number , MatrixRow .)


state 124

    (28) MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .
    ASS_MUL         reduce using rule 28 (MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .)
    ASS_DIV         reduce using rule 28 (MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .)
    ASS_SUB         reduce using rule 28 (MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .)
    ASS_ADD         reduce using rule 28 (MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .)
    ASS             reduce using rule 28 (MatrixAccess -> [ MatrixAccessRange , MatrixAccessRange ] .)


state 125

    (38) List -> [ ListContent ] .
    ID              reduce using rule 38 (List -> [ ListContent ] .)
    PRINT           reduce using rule 38 (List -> [ ListContent ] .)
    RETURN          reduce using rule 38 (List -> [ ListContent ] .)
    CONTINUE        reduce using rule 38 (List -> [ ListContent ] .)
    BREAK           reduce using rule 38 (List -> [ ListContent ] .)
    FOR             reduce using rule 38 (List -> [ ListContent ] .)
    WHILE           reduce using rule 38 (List -> [ ListContent ] .)
    IF              reduce using rule 38 (List -> [ ListContent ] .)
    {               reduce using rule 38 (List -> [ ListContent ] .)
    STRING          reduce using rule 38 (List -> [ ListContent ] .)
    [               reduce using rule 38 (List -> [ ListContent ] .)
    EYE             reduce using rule 38 (List -> [ ListContent ] .)
    ONES            reduce using rule 38 (List -> [ ListContent ] .)
    ZEROS           reduce using rule 38 (List -> [ ListContent ] .)
    FLOAT           reduce using rule 38 (List -> [ ListContent ] .)
    INT             reduce using rule 38 (List -> [ ListContent ] .)
    ,               reduce using rule 38 (List -> [ ListContent ] .)


state 126

    (40) ListContent -> ListEl , . ListContent
    (39) ListContent -> . empty
    (40) ListContent -> . ListEl , ListContent
    (2) empty -> .
    (41) ListEl -> . List
    (42) ListEl -> . Primitive
    (43) ListEl -> . ID
    (38) List -> . [ ListContent ]
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ]               reduce using rule 2 (empty -> .)
    ID              shift and go to state 118
    [               shift and go to state 99
    STRING          shift and go to state 24
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    ListEl                         shift and go to state 115
    ListContent                    shift and go to state 130
    empty                          shift and go to state 114
    List                           shift and go to state 116
    Primitive                      shift and go to state 117
    Number                         shift and go to state 25

state 127

    (34) Range -> RangeElement : RangeElement . : RangeElement
    (35) Range -> RangeElement : RangeElement .
    :               shift and go to state 131
    ID              reduce using rule 35 (Range -> RangeElement : RangeElement .)
    PRINT           reduce using rule 35 (Range -> RangeElement : RangeElement .)
    RETURN          reduce using rule 35 (Range -> RangeElement : RangeElement .)
    CONTINUE        reduce using rule 35 (Range -> RangeElement : RangeElement .)
    BREAK           reduce using rule 35 (Range -> RangeElement : RangeElement .)
    FOR             reduce using rule 35 (Range -> RangeElement : RangeElement .)
    WHILE           reduce using rule 35 (Range -> RangeElement : RangeElement .)
    IF              reduce using rule 35 (Range -> RangeElement : RangeElement .)
    {               reduce using rule 35 (Range -> RangeElement : RangeElement .)
    STRING          reduce using rule 35 (Range -> RangeElement : RangeElement .)
    [               reduce using rule 35 (Range -> RangeElement : RangeElement .)
    EYE             reduce using rule 35 (Range -> RangeElement : RangeElement .)
    ONES            reduce using rule 35 (Range -> RangeElement : RangeElement .)
    ZEROS           reduce using rule 35 (Range -> RangeElement : RangeElement .)
    FLOAT           reduce using rule 35 (Range -> RangeElement : RangeElement .)
    INT             reduce using rule 35 (Range -> RangeElement : RangeElement .)


state 128

    (14) SelectionStatement -> IF ( Expression ) Statement ELSE . Statement
    (5) Statement -> . ExpressionStatement ;
    (6) Statement -> . AssignmentStatement ;
    (7) Statement -> . PrintStatement ;
    (8) Statement -> . JumpStatement ;
    (9) Statement -> . IterationStatement
    (10) Statement -> . SelectionStatement
    (11) Statement -> . CompoundStatement
    (13) ExpressionStatement -> . Expression
    (62) AssignmentStatement -> . ID MatrixAccess AssignmentOperator Expression
    (63) AssignmentStatement -> . ID AssignmentOperator Expression
    (22) PrintStatement -> . PRINT Expression
    (19) JumpStatement -> . RETURN Expression
    (20) JumpStatement -> . CONTINUE
    (21) JumpStatement -> . BREAK
    (16) IterationStatement -> . FOR ID ASS List Statement
    (17) IterationStatement -> . FOR ID ASS Range Statement
    (18) IterationStatement -> . WHILE ( Expression ) Statement
    (14) SelectionStatement -> . IF ( Expression ) Statement ELSE Statement
    (15) SelectionStatement -> . IF ( Expression ) Statement
    (12) CompoundStatement -> . { StatementList }
    (23) Expression -> . ID
    (24) Expression -> . Primitive
    (25) Expression -> . Matrix
    (26) Expression -> . Expression BinaryOperator Expression
    (27) Expression -> . Expression ComparisonOperator Expression
    (44) Primitive -> . STRING
    (45) Primitive -> . Number
    (46) Matrix -> . [ MatrixRowList ]
    (47) Matrix -> . EYE ( INT )
    (48) Matrix -> . ONES ( INT )
    (49) Matrix -> . ZEROS ( INT )
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 13
    PRINT           shift and go to state 14
    RETURN          shift and go to state 15
    CONTINUE        shift and go to state 16
    BREAK           shift and go to state 17
    FOR             shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    {               shift and go to state 21
    STRING          shift and go to state 24
    [               shift and go to state 26
    EYE             shift and go to state 27
    ONES            shift and go to state 29
    ZEROS           shift and go to state 30
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    Expression                     shift and go to state 12
    Statement                      shift and go to state 132
    ExpressionStatement            shift and go to state 5
    AssignmentStatement            shift and go to state 6
    PrintStatement                 shift and go to state 7
    JumpStatement                  shift and go to state 8
    IterationStatement             shift and go to state 9
    SelectionStatement             shift and go to state 10
    CompoundStatement              shift and go to state 11
    Primitive                      shift and go to state 22
    Matrix                         shift and go to state 23
    Number                         shift and go to state 25

state 129

    (51) MatrixRowList -> [ MatrixRow ] , MatrixRowList .
    ]               reduce using rule 51 (MatrixRowList -> [ MatrixRow ] , MatrixRowList .)


state 130

    (40) ListContent -> ListEl , ListContent .
    ]               reduce using rule 40 (ListContent -> ListEl , ListContent .)


state 131

    (34) Range -> RangeElement : RangeElement : . RangeElement
    (36) RangeElement -> . ID
    (37) RangeElement -> . Number
    (73) Number -> . FLOAT
    (74) Number -> . INT
    ID              shift and go to state 96
    FLOAT           shift and go to state 31
    INT             shift and go to state 28

    RangeElement                   shift and go to state 133
    Number                         shift and go to state 101

state 132

    (14) SelectionStatement -> IF ( Expression ) Statement ELSE Statement .
    ID              reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    PRINT           reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    RETURN          reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    CONTINUE        reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    BREAK           reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    FOR             reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    WHILE           reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    IF              reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    {               reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    STRING          reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    [               reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    EYE             reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    ONES            reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    ZEROS           reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    FLOAT           reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    INT             reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    $end            reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    }               reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)
    ELSE            reduce using rule 14 (SelectionStatement -> IF ( Expression ) Statement ELSE Statement .)


state 133

    (34) Range -> RangeElement : RangeElement : RangeElement .
    ID              reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    PRINT           reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    RETURN          reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    CONTINUE        reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    BREAK           reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    FOR             reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    WHILE           reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    IF              reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    {               reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    STRING          reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    [               reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    EYE             reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    ONES            reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    ZEROS           reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    FLOAT           reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)
    INT             reduce using rule 34 (Range -> RangeElement : RangeElement : RangeElement .)


Conflicts:

shift/reduce conflict for ASS_MUL in state 13 resolved as shift
shift/reduce conflict for ASS_DIV in state 13 resolved as shift
shift/reduce conflict for ASS_SUB in state 13 resolved as shift
shift/reduce conflict for ASS_ADD in state 13 resolved as shift
shift/reduce conflict for ASS in state 13 resolved as shift
shift/reduce conflict for DIV_EL in state 74 resolved as shift
shift/reduce conflict for MUL_EL in state 74 resolved as shift
shift/reduce conflict for SUB_EL in state 74 resolved as shift
shift/reduce conflict for ADD_EL in state 74 resolved as shift
shift/reduce conflict for DIV in state 74 resolved as shift
shift/reduce conflict for MUL in state 74 resolved as shift
shift/reduce conflict for SUB in state 74 resolved as shift
shift/reduce conflict for ADD in state 74 resolved as shift
shift/reduce conflict for LESS in state 74 resolved as shift
shift/reduce conflict for GREATER in state 74 resolved as shift
shift/reduce conflict for NOT_EQ in state 74 resolved as shift
shift/reduce conflict for GREATER_EQ in state 74 resolved as shift
shift/reduce conflict for LESS_EQ in state 74 resolved as shift
shift/reduce conflict for EQ in state 74 resolved as shift
shift/reduce conflict for DIV_EL in state 75 resolved as shift
shift/reduce conflict for MUL_EL in state 75 resolved as shift
shift/reduce conflict for SUB_EL in state 75 resolved as shift
shift/reduce conflict for ADD_EL in state 75 resolved as shift
shift/reduce conflict for DIV in state 75 resolved as shift
shift/reduce conflict for MUL in state 75 resolved as shift
shift/reduce conflict for SUB in state 75 resolved as shift
shift/reduce conflict for ADD in state 75 resolved as shift
shift/reduce conflict for LESS in state 75 resolved as shift
shift/reduce conflict for GREATER in state 75 resolved as shift
shift/reduce conflict for NOT_EQ in state 75 resolved as shift
shift/reduce conflict for GREATER_EQ in state 75 resolved as shift
shift/reduce conflict for LESS_EQ in state 75 resolved as shift
shift/reduce conflict for EQ in state 75 resolved as shift
shift/reduce conflict for ELSE in state 121 resolved as shift